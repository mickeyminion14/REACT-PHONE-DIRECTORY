{"version":3,"sources":["components/hoc/Aux.js","components/Navbar/navbar.js","components/Layout/Layout.js","components/AddSubscriber/AddSubscribers/AddSubscribers.js","components/AddSubscriber/AddSubscriber.js","components/Subscriber/subscriber.js","components/DisplaySubscriber/DisplaySubscriber.js","components/App.js","serviceWorker.js","index.js"],"names":["aux","props","children","navbar","react_default","a","createElement","Aux","className","style","justifyContent","role","aria-label","NavbarName","layout","Navbar_navbar","AddSubscribers","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","phone","handleChangeName","e","setState","target","value","handleChangePhone","addSubscriberHandler","addSubscriber","bind","assertThisInitialized","console","log","_this2","width","type","placeholder","onChange","onClick","marginTop","Component","AddSubscriber","changeAddVisibility","AddSubscriber_AddSubscribers_AddSubscribers","subscriber","directoryList","map","index","key","deleteSubscriber","DisplaySubscriber","Subscriber_subscriber","App","addVisibility","changeNavbarName","alert","newSubsObj","concat","toConsumableArray","newdirectoryList","splice","str","window","history","pushState","location","href","Layout","components_AddSubscriber_AddSubscriber","components_DisplaySubscriber_DisplaySubscriber","Boolean","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee9cd1b1.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport Aux from '../hoc/Aux'\n\nconst navbar  = (props) => {\n\n  return (\n    <Aux>\n      <nav \n          className=\"navbar is-dark is-flex tile is-parent has-text-centered\" \n          style={{justifyContent : \"center\"}} \n          role=\"navigation\" \n          aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          {props.NavbarName}\n        </div>\n      </nav>\n    </Aux>\n  );\n}\n\nexport default navbar;","import React from 'react';\nimport Aux from '../hoc/Aux';\nimport Navbar from '../Navbar/navbar'\nconst layout = ( props ) => (\n    <Aux>\n        <div><Navbar NavbarName = {props.NavbarName}/></div>\n        <main>\n            {props.children}\n        </main>\n    </Aux>\n);\n\nexport default layout;","import React , {Component} from 'react';\nimport Aux from '../../hoc/Aux'\n\nclass AddSubscribers extends Component {\n\n  constructor(props) {\n    super(props);\n    this.addSubscriberHandler = this.addSubscriberHandler.bind(this);\n    console.log(props);\n  }\n\n  state = {\n    name : \"\",\n    phone : \"\"\n  }\n\n  handleChangeName = (e) => {\n    this.setState({ name: e.target.value });\n \n  }\n  handleChangePhone = (e) => {\n    this.setState({ phone: e.target.value });\n \n  }                         \n\n  addSubscriberHandler = () => {\n    // console.log(this.props.msg);\n    this.props.addSubscriber(this.state.name,this.state.phone);\n\n    this.setState({name:\"\",phone : \"\"});\n  }\n\n  render(props) {\n    return (\n      <Aux>\n        <div>\n          <div className=\"field\">\n            <label className=\"label\">Name</label>\n            <div className=\"control\">\n              <input \n                    style={{width :\"200px\"}} className=\"input\" type=\"text\" placeholder=\"Name\" \n                    value={this.state.name} onChange={this.handleChangeName}/>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Phone</label>\n            <div className=\"control\">\n              <input \n                    style={{width :\"200px\"}} className=\"input\" type=\"text\" placeholder=\"Phone\"\n                    value={this.state.phone} onChange={this.handleChangePhone}/>\n            </div>\n          </div>\n          <div>\n          <p>Subscriber to be added :</p>\n          <p>Name : {this.state.name}</p>\n          <p>Phone : {this.state.phone}</p>  \n          </div> \n          <div >\n            <button onClick={()=>this.addSubscriberHandler()} style = {{marginTop:\"20px\"}}  className =\"button is-primary\">ADD</button>\n          </div>     \n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default AddSubscribers;","import React from 'react';\nimport Aux from '../hoc/Aux'\nimport AddSubscribers from './AddSubscribers/AddSubscribers'\n\nconst  AddSubscriber =  (props) => {\n  console.log(props);\n   return(\n    <Aux>\n    <div className = \"main\">\n      <div >\n      <button onClick= {props.changeAddVisibility} className =\"button\">BACK</button>\n      </div>\n    </div>\n    <div className =\"main\">\n      <AddSubscribers addSubscriber = {props.addSubscriber} changeAddVisibility = {props.changeAddVisibility}/>\n    </div>\n    </Aux>\n   )\n }\n\nexport default AddSubscriber;","import React from 'react';\nimport Aux from '../hoc/Aux'\n\n\nconst subscriber = (props) => {\n  return (\n    <Aux>\n\n      \n     \n        <div>\n        {props.directoryList.map( (subscriber, index) =>\n        <div key={index} className=\"columns  \">\n          <div className=\"column\">{ subscriber.name }</div>\n          <div className=\"column\">{ subscriber.phone }</div>\n          <div onClick = {() => props.deleteSubscriber(index)} className=\"column\"><button  className =\"button is-danger\">DELETE</button></div>\n        </div>\n        )}\n        </div>\n        \n\n      \n      \n    </Aux>\n  );\n}\n\nexport default subscriber;","import React from 'react';\nimport Aux from '../hoc/Aux'\nimport  './DisplaySubscribe.css'\nimport Subscriber from '../Subscriber/subscriber'\nconst DisplaySubscriber = (props) => {  \n  return(\n      <Aux>\n        <div className = \"main\">\n          <div >\n          <button onClick ={props.changeAddVisibility}  className =\"button is-primary\">Add</button>\n          </div>\n\n          <div className=\"columns subscribers \">\n            <div className=\"column\">NAME</div>\n            <div className=\"column\">PHONE</div>\n          </div>\n          <div className = \" subscriber\">\n            <Subscriber directoryList = {props.directoryList} deleteSubscriber = {props.deleteSubscriber}/>\n          </div>\n        </div>\n      </Aux>\n    )\n  }\n\nexport default DisplaySubscriber;","import React, { Component } from 'react';\n\nimport Aux from './hoc/Aux';\nimport Layout from './Layout/Layout'\nimport AddSubscriber from './AddSubscriber/AddSubscriber';\nimport DisplaySubscriber from './DisplaySubscriber/DisplaySubscriber';\n\nclass App extends Component {\n  componentDidMount() {\n    console.log(window.location.href);\n  }\n\n  state = {\n    NavbarName : \"PHONE DIRECTORY\",\n\n    directoryList : [],\n\n    addVisibility : false,\n   \n  }\n\n  changeNavbarName = () => {\n    this.setState( { NavbarName: \"ADD SUBSCRIBER\" } );\n    \n  }\n  addSubscriber = (name,phone) => {\n    if(name===\"\" || phone ===\"\") {\n      alert(\"Field empty\");\n    }\n    else {\n    const newSubsObj = {name: name, phone :phone};\n    // this.state.directoryList.push(newSubsObj);\n    this.setState({ directoryList: [...this.state.directoryList, newSubsObj]});\n    }\n  }\n\n  deleteSubscriber = (index) => {\n    const newdirectoryList = [...this.state.directoryList];\n    newdirectoryList.splice(index,1);\n    this.setState({directoryList : newdirectoryList});\n  }\n\n  changeAddVisibility = () => {\n    let str = \"\";\n    if(!this.state.addVisibility) {\n      str  = \" ADD SUBSCRIBER\";\n      window.history.pushState('add', 'addSubscriber', 'add');\n    }\n\n    else {\n      str = \"PHONE DIRECTORY\"\n      window.history.pushState('home', 'home', '/');\n    }\n    \n    this.setState({addVisibility:!this.state.addVisibility, NavbarName : str});\n\n  }\n\n\n  render() {\n    return (\n      <Aux>\n        <Layout NavbarName = {this.state.NavbarName}>\n        { !this.state.addVisibility ?\n         <DisplaySubscriber  directoryList = {this.state.directoryList} changeAddVisibility = {this.changeAddVisibility} deleteSubscriber = {this.deleteSubscriber} />\n         :\n        <AddSubscriber  addSubscriber = {this.addSubscriber} changeAddVisibility = {this.changeAddVisibility}/>\n        }\n        </Layout>\n      </Aux>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}